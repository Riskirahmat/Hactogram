{"ast":null,"code":"var _jsxFileName = \"C:\\\\Grader\\\\React\\\\react-final-project-hacktogram-v1\\\\src\\\\routes\\\\SignIn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Input, VStack, Container } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignIn() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSignIn = async () => {\n    try {\n      // Melakukan fetch untuk mendapatkan data pengguna\n      const response = await fetch(\"http://localhost:3001/users\");\n\n      // Check if the response is valid\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch users\");\n      }\n      const users = await response.json(); // Parse the JSON response\n      const user = users.find(u => u.username === username && u.password === password);\n\n      // Jika pengguna ditemukan, simpan di localStorage dan arahkan ke halaman beranda\n      if (user) {\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        navigate(\"/\");\n      } else {\n        // Jika kredensial salah, tampilkan alert\n        alert(\"Invalid Username or Password\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"There was an error signing in. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"signin-page\",\n    centerContent: true,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        \"data-testid\": \"username\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        \"data-testid\": \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        \"data-testid\": \"signin-button\",\n        onClick: handleSignIn,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        \"data-testid\": \"register-button\",\n        onClick: () => navigate(\"/register\"),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useNavigate","Button","Input","VStack","Container","jsxDEV","_jsxDEV","SignIn","_s","username","setUsername","password","setPassword","navigate","handleSignIn","response","fetch","ok","Error","users","json","user","find","u","localStorage","setItem","JSON","stringify","alert","error","console","className","centerContent","children","spacing","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Grader/React/react-final-project-hacktogram-v1/src/routes/SignIn.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Input, VStack, Container } from \"@chakra-ui/react\";\n\nfunction SignIn() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSignIn = async () => {\n    try {\n      // Melakukan fetch untuk mendapatkan data pengguna\n      const response = await fetch(\"http://localhost:3001/users\");\n\n      // Check if the response is valid\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch users\");\n      }\n\n      const users = await response.json(); // Parse the JSON response\n      const user = users.find(\n        (u) => u.username === username && u.password === password\n      );\n\n      // Jika pengguna ditemukan, simpan di localStorage dan arahkan ke halaman beranda\n      if (user) {\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        navigate(\"/\");\n      } else {\n        // Jika kredensial salah, tampilkan alert\n        alert(\"Invalid Username or Password\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"There was an error signing in. Please try again later.\");\n    }\n  };\n\n  return (\n    <Container className=\"signin-page\" centerContent>\n      <VStack spacing={4}>\n        <Input\n          data-testid=\"username\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <Input\n          data-testid=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <Button data-testid=\"signin-button\" onClick={handleSignIn}>\n          Sign In\n        </Button>\n        <Button\n          data-testid=\"register-button\"\n          onClick={() => navigate(\"/register\")}\n        >\n          Register\n        </Button>\n      </VStack>\n    </Container>\n  );\n}\n\nexport default SignIn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}