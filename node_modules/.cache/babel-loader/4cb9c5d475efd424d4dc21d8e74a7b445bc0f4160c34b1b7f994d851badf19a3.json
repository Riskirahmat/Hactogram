{"ast":null,"code":"var _jsxFileName = \"C:\\\\Grader\\\\React\\\\react-final-project-hacktogram-v1\\\\src\\\\routes\\\\CreatePhoto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Heading, Input, Textarea, Button, Text, useToast } from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePhoto = () => {\n  _s();\n  const [photoUrl, setPhotoUrl] = useState(\"\");\n  const [caption, setCaption] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const toast = useToast();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n\n    // Validasi input\n    if (!photoUrl || !caption) {\n      setError(\"All fields are required\");\n      toast({\n        title: \"Validation Error\",\n        description: \"All fields are required\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n      return;\n    }\n    const userId = localStorage.getItem(\"userId\");\n    if (!userId) {\n      setError(\"User not authenticated\");\n      toast({\n        title: \"Authentication Error\",\n        description: \"User not authenticated\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n      navigate(\"/signin\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:3001/photos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          url: photoUrl,\n          caption,\n          userId\n        })\n      });\n\n      // Periksa apakah respons valid\n      if (!response.ok) {\n        const errorData = await response.json(); // Ambil data error dari respons\n        throw new Error(errorData.message || \"Failed to create photo\");\n      }\n      const newPhoto = await response.json();\n      const photoId = newPhoto.id; // Mengakses ID dari respons\n      toast({\n        title: \"Photo Uploaded\",\n        description: `Photo \"${newPhoto.caption}\" has been uploaded successfully with ID: ${photoId}.`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true\n      });\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error during photo upload:\", error);\n      setError(\"An error occurred. Please try again later.\");\n      toast({\n        title: \"Upload Error\",\n        description: error.message || \"An error occurred. Please try again later.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"create-photo-page\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    bg: \"gray.100\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"white\",\n      p: 6,\n      rounded: \"md\",\n      boxShadow: \"lg\",\n      width: \"400px\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: 4,\n        textAlign: \"center\",\n        fontSize: \"2xl\",\n        children: \"Create Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          \"data-testid\": \"photo-url\",\n          type: \"text\",\n          placeholder: \"Photo URL\",\n          value: photoUrl,\n          onChange: e => setPhotoUrl(e.target.value),\n          mb: 3,\n          variant: \"filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          \"data-testid\": \"caption\",\n          placeholder: \"Caption\",\n          value: caption,\n          onChange: e => setCaption(e.target.value),\n          mb: 3,\n          variant: \"filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Text, {\n          color: \"red.500\",\n          mb: 3,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          \"data-testid\": \"upload-button\",\n          type: \"submit\",\n          colorScheme: \"green\",\n          width: \"full\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePhoto, \"nfl4526G7JliIjzOjx9J3HaN6H0=\", false, function () {\n  return [useToast, useNavigate];\n});\n_c = CreatePhoto;\nexport default CreatePhoto;\nvar _c;\n$RefreshReg$(_c, \"CreatePhoto\");","map":{"version":3,"names":["React","useState","Box","Heading","Input","Textarea","Button","Text","useToast","useNavigate","jsxDEV","_jsxDEV","CreatePhoto","_s","photoUrl","setPhotoUrl","caption","setCaption","error","setError","toast","navigate","handleSubmit","e","preventDefault","title","description","status","duration","isClosable","userId","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","url","ok","errorData","json","Error","message","newPhoto","photoId","id","console","className","display","justifyContent","alignItems","height","bg","children","p","rounded","boxShadow","width","mb","textAlign","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","variant","color","colorScheme","_c","$RefreshReg$"],"sources":["C:/Grader/React/react-final-project-hacktogram-v1/src/routes/CreatePhoto.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  Input,\n  Textarea,\n  Button,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst CreatePhoto = () => {\n  const [photoUrl, setPhotoUrl] = useState(\"\");\n  const [caption, setCaption] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const toast = useToast();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    // Validasi input\n    if (!photoUrl || !caption) {\n      setError(\"All fields are required\");\n      toast({\n        title: \"Validation Error\",\n        description: \"All fields are required\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    const userId = localStorage.getItem(\"userId\");\n    if (!userId) {\n      setError(\"User not authenticated\");\n      toast({\n        title: \"Authentication Error\",\n        description: \"User not authenticated\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n      navigate(\"/signin\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:3001/photos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          url: photoUrl,\n          caption,\n          userId,\n        }),\n      });\n\n      // Periksa apakah respons valid\n      if (!response.ok) {\n        const errorData = await response.json(); // Ambil data error dari respons\n        throw new Error(errorData.message || \"Failed to create photo\");\n      }\n\n      const newPhoto = await response.json();\n      const photoId = newPhoto.id; // Mengakses ID dari respons\n      toast({\n        title: \"Photo Uploaded\",\n        description: `Photo \"${newPhoto.caption}\" has been uploaded successfully with ID: ${photoId}.`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error during photo upload:\", error);\n      setError(\"An error occurred. Please try again later.\");\n      toast({\n        title: \"Upload Error\",\n        description:\n          error.message || \"An error occurred. Please try again later.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  return (\n    <Box\n      className=\"create-photo-page\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      height=\"100vh\"\n      bg=\"gray.100\"\n    >\n      <Box bg=\"white\" p={6} rounded=\"md\" boxShadow=\"lg\" width=\"400px\">\n        <Heading mb={4} textAlign=\"center\" fontSize=\"2xl\">\n          Create Photo\n        </Heading>\n        <form onSubmit={handleSubmit}>\n          <Input\n            data-testid=\"photo-url\"\n            type=\"text\"\n            placeholder=\"Photo URL\"\n            value={photoUrl}\n            onChange={(e) => setPhotoUrl(e.target.value)}\n            mb={3}\n            variant=\"filled\"\n          />\n          <Textarea\n            data-testid=\"caption\"\n            placeholder=\"Caption\"\n            value={caption}\n            onChange={(e) => setCaption(e.target.value)}\n            mb={3}\n            variant=\"filled\"\n          />\n          {error && (\n            <Text color=\"red.500\" mb={3}>\n              {error}\n            </Text>\n          )}\n          <Button\n            data-testid=\"upload-button\"\n            type=\"submit\"\n            colorScheme=\"green\"\n            width=\"full\"\n          >\n            Upload\n          </Button>\n        </form>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CreatePhoto;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}